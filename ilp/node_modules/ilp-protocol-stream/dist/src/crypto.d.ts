/// <reference types="node" />
/// <reference types="long" />
export { decrypt, decryptConnectionAddressToken, encrypt, encryptConnectionAddressToken, generateSharedSecretFromToken, generateReceiptHMAC, hash, hmac, randomBytes, } from './util/crypto-node';
export declare const TOKEN_NONCE_LENGTH = 18;
export declare const ENCRYPTION_OVERHEAD = 28;
export declare function generateTokenNonce(): Buffer;
export declare function generateRandomCondition(): Buffer;
export declare function generatePskEncryptionKey(sharedSecret: Buffer): Promise<Buffer>;
export declare function generateFulfillmentKey(sharedSecret: Buffer): Promise<Buffer>;
export declare function generateFulfillment(fulfillmentKey: Buffer, data: Buffer): Promise<Buffer>;
export declare function generateIncomingPacketId(sharedSecret: Buffer, sequence: Long): Promise<Buffer>;
