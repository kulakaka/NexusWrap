import Long from 'long';
import * as IlpPacket from 'ilp-packet';
interface CongestionOptions {
    maximumPacketAmount?: Long;
}
export declare class CongestionController {
    private _testMaximumPacketAmount;
    private _maximumPacketAmount;
    private _fixedPacketAmount;
    constructor(opts: CongestionOptions);
    get testMaximumPacketAmount(): Long;
    get maximumPacketAmount(): Long;
    setMaximumAmounts(amount: Long): void;
    onFulfill(amountSent: Long): void;
    onAmountTooLargeError(reject: IlpPacket.IlpReject, amountSent: Long): Long;
    onInsufficientLiquidityError(reject: IlpPacket.IlpReject, amountSent: Long): void;
}
export {};
