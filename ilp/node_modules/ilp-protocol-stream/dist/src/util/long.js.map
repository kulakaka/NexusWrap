{"version":3,"file":"long.js","sourceRoot":"","sources":["../../../src/util/long.ts"],"names":[],"mappings":";;;;;;AAAA,gDAAuB;AAIvB,SAAgB,aAAa,CAAC,KAAgB,EAAE,QAAiB;IAC/D,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC7B,IAAI,QAAQ,IAAI,KAAK,GAAG,CAAC,EAAE;YACzB,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAA;SAC5C;QACD,OAAO,cAAI,CAAC,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;KACxC;IAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC7B,IAAI,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAA;SAC5C;QACD,MAAM,SAAS,GAAG,cAAI,CAAC,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;QAClD,IAAI,SAAS,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAE;YAElC,MAAM,IAAI,KAAK,CAAC,QAAQ,GAAG,KAAK,GAAG,0BAA0B,CAAC,CAAA;SAC/D;QACD,OAAO,SAAS,CAAA;KACjB;IAED,IAAI,KAAK,CAAC,QAAQ,KAAK,QAAQ,EAAE;QAC/B,MAAM,IAAI,KAAK,CAAC,WAAW,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,CAAA;KAC5E;IAED,OAAO,KAAK,CAAA;AACd,CAAC;AAzBD,sCAyBC;AAED,SAAgB,OAAO,CAAC,CAAO,EAAE,CAAO;IACtC,OAAO,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AACjC,CAAC;AAFD,0BAEC;AAED,SAAgB,OAAO,CAAC,CAAO,EAAE,CAAO;IACtC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AAC9B,CAAC;AAFD,0BAEC;AAED,SAAgB,QAAQ,CAAC,MAAc;IACrC,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;IACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;KAC9B;IACD,OAAO,GAAG,CAAA;AACZ,CAAC;AAND,4BAMC;AAED,SAAgB,WAAW,CAAC,KAAW;IACrC,IAAI,MAAM,GAAG,CAAC,CAAA;IACd,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE;QACtB,MAAM,EAAE,CAAA;QACR,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;KACzB;IACD,OAAO,MAAM,CAAA;AACf,CAAC;AAPD,kCAOC;AAED,SAAgB,UAAU,CACxB,CAAO,EACP,CAAO;IAKP,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;IACpB,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;IACnD,OAAO;QACL,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,cAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG;QAC7C,QAAQ;KACT,CAAA;AACH,CAAC;AAbD,gCAaC;AAED,SAAgB,eAAe,CAC7B,CAAO,EACP,CAAO;IAKP,MAAM,UAAU,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;IAChC,MAAM,SAAS,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;IACxE,OAAO;QACL,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC,cAAI,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU;QAC/C,SAAS;KACV,CAAA;AACH,CAAC;AAbD,0CAaC;AAED,SAAgB,eAAe,CAC7B,CAAO,EACP,CAAO;IAKP,MAAM,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;IAC7B,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;IAC3D,OAAO;QACL,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,cAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,OAAO;QACrD,QAAQ;KACT,CAAA;AACH,CAAC;AAbD,0CAaC;AAOD,SAAgB,mBAAmB,CAAC,CAAO,EAAE,CAAO,EAAE,CAAO;IAC3D,OAAO,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAA;AACpC,CAAC;AAFD,kDAEC;AAED,SAAgB,kBAAkB,CAAC,CAAO,EAAE,CAAO,EAAE,CAAO;IAC1D,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAE5C,IAAI,GAAG,CAAC,MAAM,CAAC,cAAI,CAAC,kBAAkB,CAAC;QAAE,OAAO,GAAG,CAAA;IACnD,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AACtC,CAAC;AALD,gDAKC;AAED,SAAgB,mBAAmB,CAAC,CAAO,EAAE,CAAO,EAAE,CAAO;IAC3D,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAE5C,IAAI,GAAG,CAAC,MAAM,CAAC,cAAI,CAAC,kBAAkB,CAAC;QAAE,OAAO,GAAG,CAAA;IACnD,MAAM,OAAO,GACX,CAAC,GAAG,CAAC,MAAM,EAAE;QACb,CAAC,CAAC,CAAC,KAAK,EAAE;YACR,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IAC1C,OAAO,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,cAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAA;AAC3C,CAAC;AAVD,kDAUC;AAED,SAAgB,cAAc,CAC5B,CAAO,EACP,CAAO,EACP,CAAO;IAKP,IAAI,GAAG,GAAG,cAAI,CAAC,KAAK,CAAA;IACpB,IAAI,GAAG,GAAG,cAAI,CAAC,KAAK,CAAA;IACpB,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;IACpB,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;IAEpB,OAAO,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE;QAClB,MAAM,MAAM,GAAG,GAAG,CAAA;QAClB,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,cAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAC9B,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YACjB,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YACjB,IAAI,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE;gBAC7B,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,cAAI,CAAC,IAAI,CAAC,CAAA;gBACxB,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;aACtB;SACF;QAGD,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACxB,OAAO,EAAE,GAAG,EAAE,cAAI,CAAC,kBAAkB,EAAE,GAAG,EAAE,cAAI,CAAC,KAAK,EAAE,CAAA;SACzD;QAED,CAAC,GAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAA;QAC3B,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;QACpB,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;QACpB,IAAI,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE;YAC5B,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,cAAI,CAAC,IAAI,CAAC,CAAA;YACtB,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;SACpB;KACF;IACD,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;AACrB,CAAC;AAtCD,wCAsCC;AAID,cAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG;IACzB,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAA;AACxB,CAAC,CAAA","sourcesContent":["import Long from 'long'\n\nexport type LongValue = Long | string | number\n\nexport function longFromValue(value: LongValue, unsigned: boolean): Long {\n  if (typeof value === 'number') {\n    if (unsigned && value < 0) {\n      throw new Error('Expected positive number')\n    }\n    return Long.fromNumber(value, unsigned)\n  }\n\n  if (typeof value === 'string') {\n    if (unsigned && value[0] === '-') {\n      throw new Error('Expected positive number')\n    }\n    const longValue = Long.fromString(value, unsigned)\n    if (longValue.toString() !== value) {\n      // Throw when `Long.fromString` wraps a too-large number.\n      throw new Error('Value ' + value + ' does not fit in a Long.')\n    }\n    return longValue\n  }\n\n  if (value.unsigned !== unsigned) {\n    throw new Error('Expected ' + (unsigned ? 'unsigned' : 'signed') + ' Long')\n  }\n\n  return value\n}\n\nexport function maxLong(a: Long, b: Long): Long {\n  return a.greaterThan(b) ? a : b\n}\n\nexport function minLong(a: Long, b: Long): Long {\n  return a.lessThan(b) ? a : b\n}\n\nexport function minLongs(values: Long[]): Long {\n  let min = values[0]\n  for (let i = 1; i < values.length; i++) {\n    min = minLong(min, values[i])\n  }\n  return min\n}\n\nexport function countDigits(value: Long): number {\n  let digits = 0\n  while (!value.isZero()) {\n    digits++\n    value = value.divide(10)\n  }\n  return digits\n}\n\nexport function checkedAdd(\n  a: Long,\n  b: Long\n): {\n  sum: Long\n  overflow: boolean\n} {\n  const sum = a.add(b)\n  const overflow = sum.lessThan(a) || sum.lessThan(b)\n  return {\n    sum: overflow ? Long.MAX_UNSIGNED_VALUE : sum,\n    overflow,\n  }\n}\n\nexport function checkedSubtract(\n  a: Long,\n  b: Long\n): {\n  difference: Long\n  underflow: boolean\n} {\n  const difference = a.subtract(b)\n  const underflow = difference.greaterThan(a) && difference.greaterThan(b)\n  return {\n    difference: underflow ? Long.UZERO : difference,\n    underflow,\n  }\n}\n\nexport function checkedMultiply(\n  a: Long,\n  b: Long\n): {\n  product: Long\n  overflow: boolean\n} {\n  const product = a.multiply(b)\n  const overflow = product.lessThan(a) || product.lessThan(b)\n  return {\n    product: overflow ? Long.MAX_UNSIGNED_VALUE : product,\n    overflow,\n  }\n}\n\n/**\n * Algorithm from https://en.wikipedia.org/wiki/Ancient_Egyptian_multiplication\n *\n * returns a * b / c, floored\n */\nexport function multiplyDivideFloor(a: Long, b: Long, c: Long): Long {\n  return multiplyDivide(a, b, c).quo\n}\n\nexport function multiplyDivideCeil(a: Long, b: Long, c: Long): Long {\n  const { quo, rem } = multiplyDivide(a, b, c)\n  // Never wrap to 0.\n  if (quo.equals(Long.MAX_UNSIGNED_VALUE)) return quo\n  return quo.add(rem.isZero() ? 0 : 1)\n}\n\nexport function multiplyDivideRound(a: Long, b: Long, c: Long): Long {\n  const { quo, rem } = multiplyDivide(a, b, c)\n  // Never wrap to 0.\n  if (quo.equals(Long.MAX_UNSIGNED_VALUE)) return quo\n  const roundUp =\n    !rem.isZero() &&\n    (c.isOdd()\n      ? rem.greaterThan(c.divide(2)) // 5/2 â‰… 2\n      : rem.greaterThanOrEqual(c.divide(2))) // 4/2 = 2\n  return roundUp ? quo.add(Long.UONE) : quo\n}\n\nexport function multiplyDivide(\n  a: Long,\n  b: Long,\n  c: Long\n): {\n  quo: Long\n  rem: Long\n} {\n  let quo = Long.UZERO // quotient\n  let rem = Long.UZERO // remainder\n  let qn = b.divide(c)\n  let rn = b.modulo(c)\n\n  while (!a.isZero()) {\n    const oldQuo = quo\n    if (!a.and(Long.UONE).isZero()) {\n      quo = quo.add(qn)\n      rem = rem.add(rn)\n      if (rem.greaterThanOrEqual(c)) {\n        quo = quo.add(Long.UONE)\n        rem = rem.subtract(c)\n      }\n    }\n\n    // Overflow.\n    if (quo.lessThan(oldQuo)) {\n      return { quo: Long.MAX_UNSIGNED_VALUE, rem: Long.UZERO }\n    }\n\n    a = a.shiftRightUnsigned(1)\n    qn = qn.shiftLeft(1)\n    rn = rn.shiftLeft(1)\n    if (rn.greaterThanOrEqual(c)) {\n      qn = qn.add(Long.UONE)\n      rn = rn.subtract(c)\n    }\n  }\n  return { quo, rem }\n}\n\n// TODO: Extend long with a subclass instead of overriding its prototype\n// @ts-expect-error TypeScript is right to complain, this is scary and we should not be doing it\nLong.prototype['toJSON'] = function () {\n  return this.toString()\n}\n"]}