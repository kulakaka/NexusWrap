/// <reference types="node" />
import Long from 'long';
export declare const MAX_SAFE_BYTES = 6;
export declare type SafeByteLength = 1 | 2 | 3 | 4 | 5 | 6;
export declare const isSafeLength: (length: number) => length is SafeByteLength;
export declare function isInteger(value: unknown): boolean;
export declare const isLong: (obj: any) => obj is Long.Long;
export declare function longFromValue(value: Long | string | number, unsigned: boolean): Long;
export declare function bufferToLong(buffer: Buffer, unsigned: boolean): Long;
export declare function longToBuffer(value: Long, length: number): Buffer;
export declare function getLongUIntBufferSize(value: Long): number;
export declare function getUIntBufferSize(value: number): number;
export declare function getLongIntBufferSize(value: Long): number;
export declare function getIntBufferSize(value: number): number;
