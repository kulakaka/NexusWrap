{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../test/index.spec.ts"],"names":[],"mappings":"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E,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAC3V,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAClM,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,C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","sourcesContent":["import * as Btp from '..'\nimport { assert } from 'chai'\n\ndescribe('BTP/1.0', () => {\n  beforeEach(function () {\n    this.protocolData = [\n      { protocolName: 'ilp', contentType: Btp.MIME_APPLICATION_OCTET_STREAM, data: Buffer.from([]) },\n      { protocolName: 'foo', contentType: Btp.MIME_APPLICATION_OCTET_STREAM, data: Buffer.from('bar') },\n      { protocolName: 'beep', contentType: Btp.MIME_TEXT_PLAIN_UTF8, data: Buffer.from('boop') },\n      { protocolName: 'json', contentType: Btp.MIME_APPLICATION_JSON, data: Buffer.from('{}') }\n    ]\n\n    this.transfer = {\n      transferId: 'b4c838f6-80b1-47f8-a82e-b1fcfbed89d5',\n      amount: '1000',\n      executionCondition: Btp.base64url(Buffer.from([219, 42, 249, 249, 219, 166, 255, 52, 179, 237, 173, 251, 152, 107, 155, 180, 205, 75, 75, 65, 229, 4, 65, 25, 197, 93, 52, 175, 218, 191, 252, 2])),\n      expiresAt: new Date('2017-08-28T09:32:00.000Z')\n    }\n\n    this.btpError = {\n      code: 'L13',\n      name: 'errorName',\n      triggeredAt: new Date('2017-08-28T18:32:00.000Z'),\n      data: 'boo',\n      protocolData: this.protocolData\n    }\n\n    this.buffers = {\n      response: Buffer.from([1, 0, 0, 0, 1, 37, 1, 4, 3, 105, 108, 112, 0, 0, 3, 102, 111, 111, 0, 3, 98, 97, 114, 4, 98, 101, 101, 112, 1, 4, 98, 111, 111, 112, 4, 106, 115, 111, 110, 2, 2, 123, 125]),\n      error: Buffer.from([2, 0, 0, 0, 1, 74, 76, 49, 51, 9, 101, 114, 114, 111, 114, 78, 97, 109, 101, 19, 50, 48, 49, 55, 48, 56, 50, 56, 49, 56, 51, 50, 48, 48, 46, 48, 48, 48, 90, 3, 98, 111, 111, 1, 4, 3, 105, 108, 112, 0, 0, 3, 102, 111, 111, 0, 3, 98, 97, 114, 4, 98, 101, 101, 112, 1, 4, 98, 111, 111, 112, 4, 106, 115, 111, 110, 2, 2, 123, 125]),\n      message: Buffer.from([6, 0, 0, 0, 1, 37, 1, 4, 3, 105, 108, 112, 0, 0, 3, 102, 111, 111, 0, 3, 98, 97, 114, 4, 98, 101, 101, 112, 1, 4, 98, 111, 111, 112, 4, 106, 115, 111, 110, 2, 2, 123, 125]),\n      transfer: Buffer.from([7, 0, 0, 0, 1, 45, 0, 0, 0, 0, 0, 0, 0, 100, 1, 4, 3, 105, 108, 112, 0, 0, 3, 102, 111, 111, 0, 3, 98, 97, 114, 4, 98, 101, 101, 112, 1, 4, 98, 111, 111, 112, 4, 106, 115, 111, 110, 2, 2, 123, 125])\n    }\n  })\n\n  describe('Response', () => {\n    it('should serialize/deserialize without losing data', function () {\n      const obj: Btp.BtpPacket = {\n        type: Btp.TYPE_RESPONSE,\n        requestId: 1,\n        data: {\n          protocolData: this.protocolData\n        }\n      }\n      assert.deepEqual(Btp.serialize(obj), this.buffers.response)\n      assert.deepEqual(Btp.deserialize(this.buffers.response), obj)\n    })\n  })\n\n  describe('Error', () => {\n    it('should serialize/deserialize without losing data', function () {\n      const obj: Btp.BtpPacket = {\n        type: Btp.TYPE_ERROR,\n        requestId: 1,\n        data: this.btpError\n      }\n      assert.deepEqual(Btp.serialize(obj), this.buffers.error)\n      assert.deepEqual(Btp.deserialize(this.buffers.error), obj)\n    })\n  })\n\n  describe('Message', () => {\n    it('should serialize/deserialize without losing data', function () {\n      const obj: Btp.BtpPacket = {\n        type: Btp.TYPE_MESSAGE,\n        requestId: 1,\n        data: {\n          protocolData: this.protocolData\n        }\n      }\n      assert.deepEqual(Btp.serialize(obj), this.buffers.message)\n      assert.deepEqual(Btp.deserialize(this.buffers.message), obj)\n    })\n  })\n\n  describe('Transfer', () => {\n    it('should serialize/deserialize without losing data', function () {\n      const obj: Btp.BtpPacket = {\n        type: Btp.TYPE_TRANSFER,\n        requestId: 1,\n        data: {\n          amount: '100',\n          protocolData: this.protocolData\n        }\n      }\n      assert.deepEqual(Btp.serialize(obj), this.buffers.transfer)\n      assert.deepEqual(Btp.deserialize(this.buffers.transfer), obj)\n    })\n  })\n\n  describe('serializeResponse', () => {\n    it('should serialize without losing data', function () {\n      const buf = Btp.serializeResponse(1, this.protocolData)\n      assert.deepEqual(buf, this.buffers.response)\n    })\n  })\n\n  describe('serializeError', () => {\n    it('should serialize without losing data', function () {\n      const buf = Btp.serializeError(this.btpError, 1, this.protocolData)\n      assert.deepEqual(buf, this.buffers.error)\n    })\n  })\n\n  describe('serializeMessage', () => {\n    it('should serialize without losing data', function () {\n      const buf = Btp.serializeMessage(1, this.protocolData)\n      assert.deepEqual(buf, this.buffers.message)\n    })\n  })\n\n  describe('serializeTransfer', () => {\n    it('should serialize without losing data', function () {\n      const buf = Btp.serializeTransfer({ amount: '100' }, 1, this.protocolData)\n      assert.deepEqual(buf, this.buffers.transfer)\n    })\n  })\n\n  describe('registerProtocolNames', function () {\n    it('caches the protocol names', function () {\n      Btp.registerProtocolNames(\n        this.protocolData.map((protocol: Btp.ProtocolData) => protocol.protocolName))\n      const buf = Btp.serializeMessage(1, this.protocolData)\n      assert.deepEqual(buf, this.buffers.message)\n    })\n  })\n})\n"]}