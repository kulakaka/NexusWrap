{"version":3,"file":"date.js","sourceRoot":"","sources":["../../src/utils/date.ts"],"names":[],"mappings":";;;AAQA,SAAS,GAAG,CAAC,CAAS;IACpB,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;AACrC,CAAC;AAEM,MAAM,qBAAqB,GAAG,CAAC,IAAU,EAAE,EAAE;IAClD,OAAO,CACL,IAAI,CAAC,cAAc,EAAE;QACrB,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAC3B,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;QACtB,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC,IAAI,CAAC,kBAAkB,EAAE,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAC1D,CAAA;AACH,CAAC,CAAA;AAVY,QAAA,qBAAqB,yBAUjC;AAEY,QAAA,uBAAuB,GAAG,EAAE,CAAA;AAElC,MAAM,qBAAqB,GAAG,CAAC,eAAuB,EAAE,EAAE;IAC/D,MAAM,IAAI,GAAG,IAAI,IAAI,CACnB,IAAI,CAAC,GAAG,CACN,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAC5B,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAChC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAC5B,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAC7B,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAC9B,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAC9B,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAC/B,CACF,CAAA;IAED,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;QACnB,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAA;KAChC;IAED,OAAO,IAAI,CAAA;AACb,CAAC,CAAA;AAlBY,QAAA,qBAAqB,yBAkBjC;AAEM,MAAM,qBAAqB,GAAG,CAAC,IAAU,EAAE,EAAE;IAClD,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAA;AACjD,CAAC,CAAA;AAFY,QAAA,qBAAqB,yBAEjC;AAEY,QAAA,sBAAsB,GACjC,2EAA2E,CAAA;AAEtE,MAAM,qBAAqB,GAAG,CAAC,eAAuB,EAAE,EAAE;IAC/D,MAAM,YAAY,GAAG,eAAe,CAAC,OAAO,CAAC,8BAAsB,EAAE,mBAAmB,CAAC,CAAA;IAEzF,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,CAAA;IAEnC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;QACnB,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAA;KAChC;IAED,OAAO,IAAI,CAAA;AACb,CAAC,CAAA;AAVY,QAAA,qBAAqB,yBAUjC","sourcesContent":["// The OER encoding for GeneralizedTime is a variable length octet string\n// containing the ASCII/IA5 representation of a ISO8601 combined date and time\n// in the *basic* format without the \"T\" separator.\n//\n// This is a very roundabout way of saying that GeneralizedTime contains an\n// ISO 8601 timestamp, but compared to JavaScript, we need to take out the\n// hyphens (\"-\"), colons (\":\") and the \"T\".\n\nfunction pad(n: number) {\n  return n < 10 ? '0' + n : String(n)\n}\n\nexport const dateToInterledgerTime = (date: Date) => {\n  return (\n    date.getUTCFullYear() +\n    pad(date.getUTCMonth() + 1) +\n    pad(date.getUTCDate()) +\n    pad(date.getUTCHours()) +\n    pad(date.getUTCMinutes()) +\n    pad(date.getUTCSeconds()) +\n    (date.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5)\n  )\n}\n\nexport const INTERLEDGER_TIME_LENGTH = 17\n\nexport const interledgerTimeToDate = (interledgerTime: string) => {\n  const date = new Date(\n    Date.UTC(\n      +interledgerTime.slice(0, 4), // year\n      +interledgerTime.slice(4, 6) - 1, // month\n      +interledgerTime.slice(6, 8), // day\n      +interledgerTime.slice(8, 10), // hours\n      +interledgerTime.slice(10, 12), // minutes\n      +interledgerTime.slice(12, 14), // seconds\n      +interledgerTime.slice(14, 17) // milliseconds\n    )\n  )\n\n  if (!date.valueOf()) {\n    throw new Error('invalid date')\n  }\n\n  return date\n}\n\nexport const dateToGeneralizedTime = (date: Date) => {\n  return date.toISOString().replace(/[-T:]/g, '')\n}\n\nexport const GENERALIZED_TIME_REGEX =\n  /^([0-9]{4})([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2}\\.[0-9]{3}Z)$/\n\nexport const generalizedTimeToDate = (generalizedTime: string) => {\n  const isoTimestamp = generalizedTime.replace(GENERALIZED_TIME_REGEX, '$1-$2-$3T$4:$5:$6')\n\n  const date = new Date(isoTimestamp)\n\n  if (!date.valueOf()) {\n    throw new Error('invalid date')\n  }\n\n  return date\n}\n"]}