{"version":3,"file":"errors.js","sourceRoot":"","sources":["../src/errors.ts"],"names":[],"mappings":"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","sourcesContent":["import { Writer } from 'oer-utils'\n\nexport enum IlpErrorCode {\n  F00_BAD_REQUEST = 'F00',\n  F01_INVALID_PACKET = 'F01',\n  F02_UNREACHABLE = 'F02',\n  F03_INVALID_AMOUNT = 'F03',\n  F04_INSUFFICIENT_DESTINATION_AMOUNT = 'F04',\n  F05_WRONG_CONDITION = 'F05',\n  F06_UNEXPECTED_PAYMENT = 'F06',\n  F07_CANNOT_RECEIVE = 'F07',\n  F08_AMOUNT_TOO_LARGE = 'F08',\n  F99_APPLICATION_ERROR = 'F99',\n  T00_INTERNAL_ERROR = 'T00',\n  T01_PEER_UNREACHABLE = 'T01',\n  T02_PEER_BUSY = 'T02',\n  T03_CONNECTOR_BUSY = 'T03',\n  T04_INSUFFICIENT_LIQUIDITY = 'T04',\n  T05_RATE_LIMITED = 'T05',\n  T99_APPLICATION_ERROR = 'T99',\n  R00_TRANSFER_TIMED_OUT = 'R00',\n  R01_INSUFFICIENT_SOURCE_AMOUNT = 'R01',\n  R02_INSUFFICIENT_TIMEOUT = 'R02',\n  R99_APPLICATION_ERROR = 'R99',\n}\n\nexport const codes = IlpErrorCode\n\nexport abstract class BaseIlpError extends Error {\n  public abstract ilpErrorCode: IlpErrorCode\n  public ilpErrorMessage?: string\n  public ilpErrorData?: Buffer\n}\n\nexport class BadRequestError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.F00_BAD_REQUEST as const\n}\n\nexport class InvalidPacketError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.F01_INVALID_PACKET as const\n}\n\nexport class UnreachableError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.F02_UNREACHABLE as const\n}\n\nexport class InvalidAmountError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.F03_INVALID_AMOUNT as const\n}\n\nexport class InsufficientDestinationAmountError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.F04_INSUFFICIENT_DESTINATION_AMOUNT as const\n}\n\nexport class WrongConditionError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.F05_WRONG_CONDITION as const\n}\n\nexport class UnexpectedPaymentError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.F06_UNEXPECTED_PAYMENT as const\n}\n\nexport class CannotReceiveError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.F07_CANNOT_RECEIVE as const\n}\n\nexport interface AmountTooLargeErrorOpts {\n  receivedAmount: string\n  maximumAmount: string\n}\n\nexport class AmountTooLargeError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.F08_AMOUNT_TOO_LARGE as const\n  public ilpErrorData: Buffer\n  constructor(message: string, opts: AmountTooLargeErrorOpts) {\n    super(message)\n\n    const writer = new Writer(8 + 8)\n    writer.writeUInt64(opts.receivedAmount)\n    writer.writeUInt64(opts.maximumAmount)\n\n    this.ilpErrorData = writer.getBuffer()\n  }\n}\n\nexport class FinalApplicationError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.F99_APPLICATION_ERROR as const\n  public ilpErrorData: Buffer\n  constructor(message: string, data: Buffer) {\n    super(message)\n    this.ilpErrorData = data\n  }\n}\n\nexport class InternalError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.T00_INTERNAL_ERROR as const\n}\n\nexport class PeerUnreachableError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.T01_PEER_UNREACHABLE as const\n}\n\nexport class PeerBusyError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.T02_PEER_BUSY as const\n}\n\nexport class ConnectorBusyError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.T03_CONNECTOR_BUSY as const\n}\n\nexport class InsufficientLiquidityError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.T04_INSUFFICIENT_LIQUIDITY as const\n}\n\nexport class RateLimitedError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.T05_RATE_LIMITED as const\n}\n\nexport class TemporaryApplicationError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.T99_APPLICATION_ERROR as const\n  public ilpErrorData: Buffer\n  constructor(message: string, data: Buffer) {\n    super(message)\n    this.ilpErrorData = data\n  }\n}\n\nexport class TransferTimedOutError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.R00_TRANSFER_TIMED_OUT as const\n}\n\nexport class InsufficientSourceAmountError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.R01_INSUFFICIENT_SOURCE_AMOUNT as const\n}\n\nexport class InsufficientTimeoutError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.R02_INSUFFICIENT_TIMEOUT as const\n}\n\nexport class RelativeApplicationError extends BaseIlpError {\n  public ilpErrorCode = IlpErrorCode.R99_APPLICATION_ERROR as const\n  public ilpErrorData: Buffer\n  constructor(message: string, data: Buffer) {\n    super(message)\n    this.ilpErrorData = data\n  }\n}\n"]}