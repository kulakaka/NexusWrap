"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.pluginFromEnvironment = void 0;
const crypto = __importStar(require("crypto"));
const url_1 = require("url");
const ilp_logger_1 = __importDefault(require("ilp-logger"));
const log = (0, ilp_logger_1.default)('ilp-plugin');
const generateCredentials = (opts) => {
    if (process.env.ILP_CREDENTIALS) {
        return JSON.parse(process.env.ILP_CREDENTIALS);
    }
    const secret = crypto.randomBytes(16).toString('hex');
    const name = (opts && opts.name) || '';
    if (process.env.ILP_BTP_SERVER) {
        const url = new url_1.URL(process.env.ILP_BTP_SERVER);
        url.username = name;
        url.password = secret;
        return { server: url.href };
    }
    return { server: `btp+ws://${name}:${secret}@localhost:7768` };
};
exports.pluginFromEnvironment = function (opts) {
    const module = process.env.ILP_PLUGIN || 'ilp-plugin-btp';
    const credentials = generateCredentials(opts);
    log.debug('creating plugin with module', module);
    log.debug('creating plugin with credentials', credentials);
    const Plugin = require(module);
    return new Plugin(credentials);
};
exports.pluginFromEnvironment.pluginFromEnvironment = exports.pluginFromEnvironment;
exports.pluginFromEnvironment.default = exports.pluginFromEnvironment;
exports.default = exports.pluginFromEnvironment;
module.exports = exports.pluginFromEnvironment;
//# sourceMappingURL=index.js.map