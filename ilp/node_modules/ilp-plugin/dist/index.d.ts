/// <reference types="node" />
export interface Plugin {
    connect(params?: Record<string, unknown>): Promise<void>;
    disconnect(params?: Record<string, unknown>): Promise<void>;
    isConnected(): boolean;
    sendData(data: Buffer): Promise<Buffer>;
    sendMoney(amount: string): Promise<void>;
    registerDataHandler: (handler: (data: Buffer) => Promise<Buffer>) => void;
    deregisterDataHandler: () => void;
    registerMoneyHandler: (handler: (amount: string) => Promise<void>) => void;
    deregisterMoneyHandler: () => void;
}
export interface CredentialOptions {
    name?: string;
}
export declare const pluginFromEnvironment: ModuleExport;
export interface ModuleExport {
    (opts?: CredentialOptions): Plugin;
    default: ModuleExport;
    pluginFromEnvironment: (opts?: CredentialOptions) => Plugin;
}
export default pluginFromEnvironment;
