import * as WebSocket from 'ws';
import { EventEmitter2 } from 'eventemitter2';
export interface WebSocketConstructor {
    new (url: string): WebSocket;
}
export interface WebSocketReconnectorConstructorOptions {
    intervals?: Array<number>;
    interval?: number;
    clearTryTimeout?: number;
    WebSocket: WebSocketConstructor;
}
export declare class WebSocketReconnector extends EventEmitter2 {
    private _intervals;
    private _clearTryTimeout;
    private _clearTryTimer?;
    private _openTimer?;
    private _tries;
    private _url;
    private _instance;
    private _connected;
    private WebSocket;
    private _heartbeatTimer?;
    constructor(options: WebSocketReconnectorConstructorOptions);
    open(url: string): Promise<void>;
    send(data: any, cb?: (err?: Error) => void): void;
    close(): void;
    private _open;
    heartbeat(): void;
    private _reconnect;
}
