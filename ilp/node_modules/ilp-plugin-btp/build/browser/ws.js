"use strict";
const events_1 = require("events");
class WebSocketPolyfill extends events_1.EventEmitter {
    constructor(uri) {
        super();
        this._ws = new WebSocket(uri);
        this._ws.binaryType = 'arraybuffer';
        this._ws.onerror = this.emit.bind(this, 'error');
        this._ws.onopen = this.emit.bind(this, 'open');
        this._ws.onclose = this.emit.bind(this, 'close');
        this._ws.onmessage = (msg) => {
            this.emit('message', Buffer.from(msg.data));
        };
    }
    send(msg, cb) {
        if (this._ws.readyState === WebSocket.CONNECTING || this._ws.readyState === WebSocket.OPEN) {
            this._ws.send(msg.buffer);
            process.nextTick(cb);
        }
        else {
            process.nextTick(cb, new Error('already closed'));
        }
    }
    ping() { }
    close() {
        this._ws.close();
    }
}
module.exports = WebSocketPolyfill;
//# sourceMappingURL=ws.js.map